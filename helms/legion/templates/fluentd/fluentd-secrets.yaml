{{- if .Values.feedback.enabled -}}
{{- if eq .Values.feedback.output.target "s3" }}
{{- if eq .Values.feedback.output.s3.authorization "secret" }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-fluentd-secret"
  labels:
    component: "legion-fluentd"
    {{- include "legion.helm-labels" . | nindent 4 }}
type: Opaque
data:
  AWSKeyID: "{{ required "AWS Access Key ID is required for secret-based auth." .Values.feedback.output.s3.AWSKeyID | b64enc }}"
  AWSSecretKey: "{{ required "AWS Secret Access Key is required for secret-based auth." .Values.feedback.output.s3.AWSSecretKey | b64enc }}"
{{- end }}
{{- end }}
{{- if eq .Values.feedback.output.target "gcs" }}
{{- if eq .Values.feedback.output.gcs.authorization "keyfile" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-fluentd-keyfile"
  labels:
    component: "legion-fluentd"
    {{- include "legion.helm-labels" . | nindent 4 }}
data:
  keyfile.json: |
    {
      "type": "service_account",
      "project_id": "{{ .Values.feedback.output.gcs.project }}",
      "private_key_id": "{{ .Values.feedback.output.gcs.private_key_id }}",
      "private_key": "{{ .Values.feedback.output.gcs.private_key }}",
      "client_email": "{{ .Values.feedback.output.gcs.client_email }}",
      "client_id": "{{ .Values.feedback.output.gcs.client_id }}",
      "auth_uri": "{{ .Values.feedback.output.gcs.auth_uri }}",
      "token_uri": "{{ .Values.feedback.output.gcs.token_uri }}",
      "auth_provider_x509_cert_url": "{{ .Values.feedback.output.gcs.auth_provider_x509_cert_url }}",
      "client_x509_cert_url": "{{ .Values.feedback.output.gcs.client_x509_cert_url }}"
    }

{{- end }}
{{- end }}
{{- end }}
